environment: dev

frontend:
  name: frontend
  tier: web
  replicas: 1
  image: mykubelib.azurecr.io/aks-frontend:v1.0.6
  tag: v1.0.6
  imagePullPolicy: IfNotPresent
  containerPort: 80
  servicePort: 80
  serviceType: ClusterIP
  resources:
    requests:
      memory: "128Mi"
      cpu: "25m"
    limits:
      memory: "156Mi"
      cpu: "150m"

backend:
  name: backend
  tier: web
  replicas: 1
  image: mykubelib.azurecr.io/aks-backend
  tag: v1.0.6
  imagePullPolicy: IfNotPresent
  containerPort: 8000
  servicePort: 8000
  serviceType: ClusterIP
  resources:
    requests:
      memory: "128Mi"
      cpu: "25m"
    limits:
      memory: "156Mi"
      cpu: "150m"

mongodb:
  name: mongodb
  tier: web
  replicas: 1
  image: mongo
  tag: 6.0
  containerPort: 27017
  serviceType: ClusterIP
  servicePort: 27017
  targetPort: 27017
  resources:
    requests:
      memory: "128Mi"
      cpu: "25m"
    limits:
      memory: "256Mi"
      cpu: "150m"
  volumes:
    name: mongo-data
  readinessProbe:
    port: 27017
  pvc:
    name: mongo-data
    accessMode: ReadWriteOnce
    storage: 100Mi

rabbitmq:
  name: rabbitmq
  tier: web
  replicas: 1
  image: rabbitmq:3-management
  resources:
    requests:
      memory: "128Mi"
      cpu: "150m"
    limits:
      memory: "256Mi"
      cpu: "300m"
  managementNodePort: 32010
  amqpNodePort: 32020

redis:
  name: redis
  tier: web
  replicas: 1
  image: redis:7
  containerPort: 6379
  servicePort: 6379
  resources:
    requests:
      memory: "128Mi"
      cpu: "250m"
    limits:
      memory: "256Mi"
      cpu: "500m"

consumer:
  name: consumer
  tier: web
  replicas: 1
  image: mykubelib.azurecr.io/aks-backend:v1.0.6
  args:
    - python
    - consumer.py
  rabbitmqUrl: amqp://guest:guest@rabbitmq:5672/
  resources:
    requests:
      memory: "64Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "100m"

ingress:
  name: my-kube-app
  sslRedirect: "false"
  useRegex: "true"
  rewriteTarget: /
  whitelist: "89.0.47.253/32,78.34.132.74/32"
  ingressClassName: nginx
  path: /
  pathType: Prefix
  serviceName: frontend
  servicePort: 80
