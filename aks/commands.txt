az aks get-credentials --resource-group sameed-playground --name myAKSCluster
kubectl get pods
kubectl config current-context
kubectl get storageclasses
k create bs robot-shop
helm install robot-shop --namespace robot-shop .


# it will add a new context to your kubeconfig file
az aks get-credentials --resource-group sameed-playground --name mytestcluster --overwrite-existing

kubectl config view
kubectl config get-contexts	
kubectl config set-context mytestcluster

# Kubernetes Deployments
kubectl set image deployment/frontend frontend=sameed.azurecr.io/aks-frontend:v1.0.7
kubectl rollout status deployment/frontend    


# Push image to to ACR
az login
az acr login --name sameed
docker tag frontend:v1.0.2 sameed.azurecr.io/frontend:v1.0.2
docker push sameed.azurecr.io/frontend:v1.0.2

# docker image build for AMD64 architecture
docker buildx build --platform linux/amd64 -t sameed.azurecr.io/frontend:v1.0.4 --push .


# Restart deployment
k rollout restart deployment/frontend 
kubectl rollout undo deployment

# Install nginx ingress controller to fwd traffic from frontend to backend

kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml

# Docker Build commands:
docker build -t sameed.azurecr.io/frontend:v1.0.4 .
docker run -d -p 80:80 sameed.azurecr.io/frontend:v1.0.4


